function GridGraphics.new 0
push constant 9
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push argument 4
pop this 6
push this 1
push this 0
sub
push this 6
call Math.divide 2
pop this 4
push this 3
push this 2
sub
push this 6
call Math.divide 2
pop this 5
push this 0
pop this 7
push this 2
pop this 8
push pointer 0
return
function GridGraphics.dispose 0
push argument 0
pop pointer 0
push constant 0
return
function GridGraphics.drawGrid 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 11
lt
not
if-goto WHILE_END0
push this 0
push local 0
push this 4
call Math.multiply 2
add
push this 2
push this 0
push local 0
push this 4
call Math.multiply 2
add
push this 3
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push constant 11
lt
not
if-goto WHILE_END1
push this 0
push this 2
push local 0
push this 5
call Math.multiply 2
add
push this 1
push this 2
push local 0
push this 5
call Math.multiply 2
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function GridGraphics.toggleBold 0
push argument 0
pop pointer 0
push argument 1
call Screen.setColor 1
pop temp 0
push this 7
push constant 1
add
push this 8
push constant 1
add
push this 7
push this 4
add
push constant 1
sub
push this 8
push constant 1
add
call Screen.drawLine 4
pop temp 0
push this 7
push constant 1
add
push this 8
push constant 2
add
push this 7
push this 4
add
push constant 1
sub
push this 8
push constant 2
add
call Screen.drawLine 4
pop temp 0
push this 7
push constant 1
add
push this 8
push this 5
add
push constant 1
sub
push this 7
push this 4
add
push constant 1
sub
push this 8
push this 5
add
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push this 7
push constant 1
add
push this 8
push this 5
add
push constant 2
sub
push this 7
push this 4
add
push constant 1
sub
push this 8
push this 5
add
push constant 2
sub
call Screen.drawLine 4
pop temp 0
push this 7
push constant 1
add
push this 8
push constant 1
add
push this 7
push constant 1
add
push this 8
push this 5
add
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push this 7
push constant 2
add
push this 8
push constant 1
add
push this 7
push constant 2
add
push this 8
push this 5
add
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push this 7
push this 4
add
push constant 1
sub
push this 8
push constant 1
add
push this 7
push this 4
add
push constant 1
sub
push this 8
push this 5
add
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push this 7
push this 4
add
push constant 2
sub
push this 8
push constant 1
add
push this 7
push this 4
add
push constant 2
sub
push this 8
push this 5
add
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push argument 1
not
push argument 2
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 2
call GridGraphics.toggleCurrFill 2
pop temp 0
label IF_FALSE0
push constant 0
return
function GridGraphics.move 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
push argument 2
call GridGraphics.toggleBold 3
pop temp 0
push argument 1
push constant 130
eq
push this 7
push this 0
sub
push constant 0
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 7
push this 4
sub
pop this 7
label IF_FALSE0
push argument 1
push constant 131
eq
push this 8
push this 2
sub
push constant 0
gt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 8
push this 5
sub
pop this 8
label IF_FALSE1
push argument 1
push constant 132
eq
push this 7
push this 4
add
push this 1
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 7
push this 4
add
pop this 7
label IF_FALSE2
push argument 1
push constant 133
eq
push this 8
push this 5
add
push this 3
lt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 8
push this 5
add
pop this 8
label IF_FALSE3
push pointer 0
push constant 0
not
push constant 0
call GridGraphics.toggleBold 3
pop temp 0
push constant 0
return
function GridGraphics.toggleFill 2
push argument 0
pop pointer 0
push this 0
push argument 1
push this 4
call Math.multiply 2
add
pop local 0
push this 2
push argument 2
push this 5
call Math.multiply 2
add
pop local 1
push argument 3
call Screen.setColor 1
pop temp 0
push local 0
push constant 1
add
push local 1
push constant 1
add
push local 0
push this 4
add
push constant 1
sub
push local 1
push this 5
add
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function GridGraphics.toggleCurrFill 0
push argument 0
pop pointer 0
push pointer 0
push this 7
push this 0
sub
push this 4
call Math.divide 2
push this 8
push this 2
sub
push this 5
call Math.divide 2
push argument 1
call GridGraphics.toggleFill 4
pop temp 0
push argument 1
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 0
not
push constant 0
call GridGraphics.toggleBold 3
pop temp 0
label IF_FALSE0
push constant 0
return
function GridGraphics.setCurrPos 0
push argument 0
pop pointer 0
push this 0
push argument 1
push this 4
call Math.multiply 2
add
pop this 7
push this 2
push argument 2
push this 5
call Math.multiply 2
add
pop this 8
push constant 0
return
function GridGraphics.drawCurrHit 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
call GridGraphics.toggleCurrFill 2
pop temp 0
push pointer 0
push this 7
push this 8
call GridGraphics.drawHitPos 3
pop temp 0
push constant 0
return
function GridGraphics.drawHit 2
push argument 0
pop pointer 0
push this 0
push argument 1
push this 4
call Math.multiply 2
add
pop local 0
push this 2
push argument 2
push this 5
call Math.multiply 2
add
pop local 1
push pointer 0
push argument 1
push argument 2
push constant 0
call GridGraphics.toggleFill 4
pop temp 0
push pointer 0
push local 0
push local 1
call GridGraphics.drawHitPos 3
pop temp 0
push constant 0
return
function GridGraphics.drawHitPos 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push constant 10
add
push argument 2
push constant 5
add
push argument 1
push constant 10
add
push argument 2
push constant 14
add
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 10
add
push argument 2
push constant 16
add
push argument 1
push constant 10
add
push argument 2
push constant 17
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function GridGraphics.drawCurrMiss 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
call GridGraphics.toggleCurrFill 2
pop temp 0
push pointer 0
push this 7
push this 8
call GridGraphics.drawMissPos 3
pop temp 0
push constant 0
return
function GridGraphics.drawMiss 2
push argument 0
pop pointer 0
push this 0
push argument 1
push this 4
call Math.multiply 2
add
pop local 0
push this 2
push argument 2
push this 5
call Math.multiply 2
add
pop local 1
push pointer 0
push argument 1
push argument 2
push constant 0
call GridGraphics.toggleFill 4
pop temp 0
push pointer 0
push local 0
push local 1
call GridGraphics.drawMissPos 3
pop temp 0
push constant 0
return
function GridGraphics.drawMissPos 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push constant 5
add
push argument 2
push constant 8
add
push argument 1
push constant 17
add
push argument 2
push constant 8
add
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 5
add
push argument 2
push constant 14
add
push argument 1
push constant 17
add
push argument 2
push constant 14
add
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 8
add
push argument 2
push constant 5
add
push argument 1
push constant 8
add
push argument 2
push constant 17
add
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 14
add
push argument 2
push constant 5
add
push argument 1
push constant 14
add
push argument 2
push constant 17
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function GridGraphics.drawSinkShip 5
push argument 0
pop pointer 0
push argument 1
call Ship.getX 1
pop local 0
push argument 1
call Ship.getY 1
pop local 1
push argument 1
call Ship.getSize 1
pop local 2
push argument 1
call Ship.getIsVert 1
pop local 4
push constant 0
pop local 3
label WHILE_EXP0
push local 3
push local 2
lt
not
if-goto WHILE_END0
push local 4
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push local 0
push local 1
push local 3
add
call GridGraphics.drawSink 3
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
push local 0
push local 3
add
push local 1
call GridGraphics.drawSink 3
pop temp 0
label IF_END0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function GridGraphics.drawSink 2
push argument 0
pop pointer 0
push this 0
push argument 1
push this 4
call Math.multiply 2
add
pop local 0
push this 2
push argument 2
push this 5
call Math.multiply 2
add
pop local 1
push pointer 0
push argument 1
push argument 2
push constant 0
call GridGraphics.toggleFill 4
pop temp 0
push pointer 0
push local 0
push local 1
call GridGraphics.drawSinkPos 3
pop temp 0
push constant 0
return
function GridGraphics.drawSinkPos 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push constant 5
add
push argument 2
push constant 5
add
push argument 1
push constant 15
add
push argument 2
push constant 15
add
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 5
add
push argument 2
push constant 15
add
push argument 1
push constant 15
add
push argument 2
push constant 5
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
